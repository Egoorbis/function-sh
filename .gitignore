# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc


# Python artifacts
__pycache__/
*.pyc
*.pyo
*.pyd
*.pyc
*.pyo
*.pyd
*.pycache/
*.egg-info/
dist/
build/
.eggs/
*.egg

# Virtual environments
env/
venv/
ENV/
.venv/
.python_packages/

# Azure Functions artifacts
.local.settings.json
*.funcignore

# VS Code settings
.vscode/
.history/

# OS generated files
.DS_Store
Thumbs.db

# Test and coverage results
.coverage
htmlcov/
.tox/
.nox/
.pytest_cache/
.cache/
nosetests.xml
coverage.xml
*.cover
*.log

# Azure artifacts
__blobstorage__
__queuestorage__
__azurite_db*__.json

# Node modules (if using JavaScript extensions)
node_modules/

# Miscellaneous
*.swp
*.swo
